name: Docker Build & Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  schedule:
    - cron: '0 0 * * 5' # 每周五 00:00 UTC

jobs:
  build-and-push:
    if: |
      github.ref == 'refs/heads/main' ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest two tags
        id: get_tags
        run: |
          git fetch --tags
          tags=$(git tag --sort=-creatordate | grep '^v' | head -n 2 | tr '\n' ',' | sed 's/,$//')
          echo "tags=$tags" >> $GITHUB_OUTPUT

      - name: Set Docker tags
        id: docker_tags
        run: |
          IMAGE_NAME=${{ vars.DOCKERHUB_USERNAME }}/jupyter-base-notebook
          TAGS=""
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAGS="${IMAGE_NAME}:latest"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            TAGS="${IMAGE_NAME}:${TAG}"
          fi
          # 只在定时任务或main分支时推送最新两个tag
          if [[ "${{ github.event_name }}" == "schedule" || "${GITHUB_REF}" == "refs/heads/main" ]]; then
            for t in $(echo "${{ steps.get_tags.outputs.tags }}" | tr ',' ' '); do
              TAGS="$TAGS,${IMAGE_NAME}:${t}"
            done
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
